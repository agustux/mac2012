- hosts: localhost
  tasks:
  - name: check if this is a VM
    ansible.builtin.shell: "lsusb | grep -q QEMU"
    ignore_errors: true
    register: found_qemu
    tags: is_vm
  - name: setting is_vm
    ansible.builtin.set_fact:
      is_vm: "{{ found_qemu.rc == 0 }}"
    tags: is_vm

  - name: fixing gtk-theme
    ansible.builtin.shell: "gsettings set org.gnome.desktop.interface gtk-theme 'Yaru-dark'"
    tags: theme
  - name: fixing theme default
    ansible.builtin.shell: "gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'"
    tags: theme

  - name: setting keyboard configurations to Macbook/Macbook Pro (debconf 1/2)
    ansible.builtin.debconf:
      name: debconf-utils
      question: keyboard-configuration/model
      value: "MacBook/MacBook Pro"
      vtype: select
    become: true
    tags: keyboard
  - name: setting keyboard configurations to Macbook/Macbook Pro (debconf 2/2)
    ansible.builtin.debconf:
      name: debconf-utils
      question: keyboard-configuration/modelcode
      value: "macbook78"
      vtype: string
    become: true
    tags: keyboard

  - name: configuring xmodmap
    ansible.builtin.shell: "xmodmap -pke > ~/.Xmodmap"
    tags: xmodmap
  - name: remapping super to ctrl for shortcuts
    ansible.builtin.blockinfile:
      path: ~/.Xmodmap
      append_newline: true
      block: |
        ! bind left command key as another Ctrl key
          remove mod4 = Super_L
          keysym Super_L = Control_L
          add Control = Control_L
      marker: "! {mark} ANSIBLE MANAGED BLOCK"
    tags: xmodmap
  - name: loading xmodmap
    ansible.builtin.shell: "xmodmap ~/.Xmodmap"
    tags: xmodmap

  - name: loading dconf settings file
    ansible.builtin.shell: "dconf load / < {{ playbook_dir }}/files/dconf-settings.ini"
    tags: dconf

  - name: fixing trackpad tap-to-click
    ansible.builtin.shell: "gsettings set org.gnome.desktop.peripherals.touchpad tap-to-click true"
    tags: touchpad
  - name: fixing trackpad reverse scrolling
    ansible.builtin.shell: "gsettings set org.gnome.desktop.peripherals.touchpad natural-scroll true"
    tags: touchpad
  - name: setting two-finger-scrolling
    ansible.builtin.shell: "gsettings set org.gnome.desktop.peripherals.touchpad two-finger-scrolling-enabled true"
    tags: touchpad
  - name: disabling touchpad while typing
    ansible.builtin.shell: "gsettings set org.gnome.desktop.peripherals.touchpad disable-while-typing true"
    tags: touchpad
  - name: secondary click with two-fingers
    ansible.builtin.shell: "gsettings set org.gnome.desktop.peripherals.touchpad click-method fingers"
    tags: touchpad

  - name: creating .config/autostart directory for camera patch
    ansible.builtin.file:
      path: ~/.config/autostart
      state: directory
      mode: '700'
    tags: autostart
  - name: copying snapshot patch to autostart processes
    ansible.builtin.copy:
      src: "{{ playbook_dir }}/files/systemctl.desktop"
      dest: ~/.config/autostart/systemctl.desktop
      mode: '664'
    tags: autostart

  - name: opening sublime to create configuration files
    ansible.builtin.shell: "subl"
    tags: sublime
  - name: sleeping
    ansible.builtin.pause:
      seconds: 5
    tags: sublime
  - name: pkilling sublime
    ansible.builtin.shell: "pkill sublime_text"
    tags: sublime
  - name: configuring sublime
    ansible.builtin.copy:
      src: "{{ playbook_dir }}/files/Preferences.sublime-settings"
      dest: ~/.config/sublime-text/Packages/User/Preferences.sublime-settings
    tags: sublime

  - name: adding git aliases
    community.general.git_config:
      name: "{{ item.name }}"
      scope: global
      value: "{{ item.value }}"
    loop:
      - { name: alias.co, value: checkout}
      - { name: alias.br, value: branch}
      - { name: alias.ci, value: commit}
      - { name: alias.st, value: status}
      - { name: user.email, value: "{{ ansible_user_id }}@ubuntu"}
      - { name: user.name, value: "{{ ansible_user_id }}"}
    tags: git

  - name: enabling and starting bluetooth service
    ansible.builtin.systemd_service:
      name: bluetooth.service
      enabled: true
      state: started
    become: true
    tags: bluetooth
  - name: unblocking bluetooth
    ansible.builtin.shell: "sudo rfkill unblock bluetooth"
    become: true
    tags: bluetooth
  - name: copying bredr bluetooth enabled configs
    ansible.builtin.copy:
      src: "{{ playbook_dir }}/files/main.conf"
      dest: /etc/bluetooth/main.conf
    become: true
    tags: bluetooth
  - name: restarting bluetooth
    ansible.builtin.shell: "sudo /etc/init.d/bluetooth restart"
    tags: bluetooth

  - name: creating .ssh directory
    ansible.builtin.file:
      path: ~/.ssh
      state: directory
      mode: '700'
    tags: ssh-keygen
  - name: generating SSH key to add to github
    community.crypto.openssh_keypair:
      path: ~/.ssh/id_ed25519
      type: ed25519
      comment: "{{ ansible_user_id }}@ubuntu"
    tags: ssh-keygen

  - name: starting the configuration setup for printer
    ansible.builtin.shell: "cat {{ playbook_dir }}/files/printerconfigs.txt | {{ playbook_dir }}/files/printerconfigs.sh"
    tags: printer
  - name: stopping cupsd to load printer network settings
    ansible.builtin.systemd_service:
      state: stopped
      name: cupsd
    tags: printer
    become: true
  - name: configuring printer network settings
    ansible.builtin.copy:
      src: "{{ playbook_dir }}/files/printers.conf"
      dest: /etc/cups/printers.conf
    become: true
    tags: printer
  - name: restarting cupsd
    ansible.builtin.systemd_service:
      state: restarted
      name: cupsd
    tags: printer
    become: true

  - name: cleaning up tar archive
    ansible.builtin.file:
      path: "{{ item }}"
      state: absent
    with_fileglob:
      - "~/v*.tar.gz"
